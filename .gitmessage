<type>(<scope>): <subject>

<body>

<footer>

# -- Commit Message Format --
# Each commit message consists of a header, a body and a footer.  The header has a special
# format that includes a type, a scope and a subject:
#   <type>(<scope>): <subject>
#   <BLANK LINE>
#   <body>
#   <BLANK LINE>
#   <footer>
#
# The header is mandatory and the scope of the header is optional.
#
# Any line of the commit message cannot be longer 100 characters! This allows the message to be easier
# to read on GitHub as well as in various git tools.
#
# Commit samples: https://github.com/angular/angular/commits/master
#

# -- Type --
# Must be one of the following:
# * feat: A new feature
# * fix: A bug fix
# * docs: Documentation only changes
# * style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
# * refactor: A code change that neither fixes a bug nor adds a feature
# * perf: A code change that improves performance
# * test: Adding missing tests or correcting existing tests
# * build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
# * ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
# * chore: Other changes that don't modify `src` or `test` files
# * revert: Reverts a previous commit. Should contain the header of the reverted commit and the body should say: "This reverts commit <hash>".
#

# -- Scope --
# The scope could be anything specifying place of the commit change. For example Compiler, ElementInjector, etc.
#

# -- Subject --
# The subject contains succinct description of the change:
# * use the imperative, present tense: "change" not "changed" nor "changes"
# * don't capitalize first letter
# * no dot (.) at the end
#

# -- Body --
# Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes".
# The body should include the motivation for the change and contrast this with previous behavior.
#

# -- Footer --
# The footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit Closes.
#
# Closing commits should start with "Closes" with a space followed by "#<issue number>". Multiple issues are separated with a comma and a blank space.
# Breaking Changes should start with the word "BREAKING CHANGE:" with a space or two newlines. The rest of the commit message is then used for this.
#
